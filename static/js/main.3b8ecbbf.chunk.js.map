{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","title","completed","id","classNames","TodoList","todos","map","username","userId","usersFromServer","find","App","useState","setTitle","setUserId","visibleTodos","setVisibleTodos","titleError","setTitleError","userIdError","setUserIdError","action","method","onSubmit","event","preventDefault","trim","length","newTodo","Math","max","htmlFor","type","placeholder","value","onChange","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3b8ecbbf.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const { title, completed, user } = todo;\n\n  return (\n    <div\n      data-id={todo.id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {\n        user && (\n          <UserInfo user={user} />\n        )\n      }\n    </div>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <ul>\n    {todos.map(todo => {\n      return (\n        <div key={todo.id} className=\"TodoList\">\n          <TodoInfo todo={todo} />\n        </div>\n      );\n    })}\n  </ul>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [visibleTodos, setVisibleTodos] = useState([...todos]);\n  const [titleError, setTitleError] = useState('');\n  const [userIdError, setUserIdError] = useState('');\n\n  const changeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n  };\n\n  const changeUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n  };\n\n  const handleSubmit = (event:React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!title) {\n      setTitleError('Please enter a title');\n    }\n\n    if (!userId) {\n      setUserIdError('Please choose a user');\n    }\n\n    if (title.trim().length && userId) {\n      const newTodo = {\n        userId: userId || 0,\n        id: Math.max(...visibleTodos.map(todo => todo.id)) + 1,\n        title: title.trim(),\n        completed: false,\n        user: usersFromServer.find(user => user.id === userId) || null,\n      };\n\n      setVisibleTodos([...visibleTodos, newTodo]);\n      setTitle('');\n      setUserId(0);\n      setTitleError('');\n      setUserIdError('');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">\n            <span>Title: </span>\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              name=\"title\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={changeTitle}\n            />\n            <span className=\"error\">{!title && `${titleError}`}</span>\n          </label>\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">\n            <span>User: </span>\n            <select\n              data-cy=\"userSelect\"\n              id=\"userId\"\n              name=\"userId\"\n              value={userId}\n              onChange={changeUser}\n            >\n              <option\n                value=\"0\"\n              >\n                Choose a user\n              </option>\n              {usersFromServer.map(user => (\n                <option key={user.id} value={user.id}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n\n            <span className=\"error\">{!userId && `${userIdError}`}</span>\n          </label>\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}